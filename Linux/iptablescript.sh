#!/bin/bash

#Author: ValcanK
# https://valcank.github.io/

# This script will be used to modify the iptables of a linux system
# It will have a few options:
#	1. Block all non-service connections(example: 20,21,22,80,443,8080,etc...).
#	2. Block a specific IP.
#	3. Block to any currently connected IP that is not yours.
#	4. The ability to remove a block by IP or Range.
#	5. The ability to remove all blocks.


# Building the menu

echo "Please select a menu option from below:"
echo "1. Block all non-service connections(example: 20,21,22,80,443,8080,etc...)"
echo "2. Block a specific IP or Range"
echo "3. Block to any currently connected IP that is not yours"
echo "4. Remove a block by IP or Range"
echo "5. Remove all blocks"
echo "Your choice: "
read choice

# meat of the script
if [ $choice == '1' ]; then
	#Make sure we don't lock ourselves out first
	iptables -P INPUT ACCEPT
	iptables -P OUTPUT ACCEPT
	#Drop all non-default policies
	iptables -F

	echo "Your choice was to Block all non-service connections"
	iptables -A INPUT -p tcp --dport 20 -j ACCEPT
	iptables -A INPUT -p tcp --dport 21 -j ACCEPT
	iptables -A INPUT -p tcp --dport 22 -j ACCEPT
	iptables -A INPUT -p tcp --dport 25 -j ACCEPT
	iptables -A INPUT -p tcp --dport 80 -j ACCEPT
	iptables -A INPUT -p tcp --dport 110 -j ACCEPT
	iptables -A INPUT -p tcp --dport 135 -j ACCEPT
	iptables -A INPUT -p tcp --dport 139 -j ACCEPT
	iptables -A INPUT -p tcp --dport 443 -j ACCEPT
	iptables -A INPUT -p tcp --dport 445 -j ACCEPT
	iptables -A INPUT -p tcp --dport 8080 -j ACCEPT
	iptables -A OUTPUT -p tcp -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A INPUT -p tcp -m state --state RELATED,ESTABLISHED -j ACCEPT

	#Deny all else
	iptables -P INPUT DROP
        iptables -P OUTPUT DROP

	echo "Blocking Inbound connections on ports: 20,21,22,80,443,8080"

#This portion will block a specific IP or Range
elif [ $choice == '2' ]; then
	echo "Enter the IP or range: "
	read IPorRange
	iptables -A INPUT -s $IPorRange -j DROP
	echo "Your choice was to block" $IPorRange

# This portion will ask for your ip
# once you supply an IP it will filter all foreign connections and attemp to place iptable blocks on each of them
elif [ $choice == '3' ]; then
	echo "Your choice was to block IPs that are not yours"
	echo "What IP are you coming from? "
	read C2IP
	echo "Your IP" $C2IP
	netstat -natpu | grep ESTABLISHED | awk '{print $5}' | cut -d: -f1 |  grep -v $C2IP > new_ip_file.txt
# Creating the variable and then looping through the ip file
# Couldn't figure out how to push the output of the above command into an array, oh well
	ipsToBlock='new_ip_file.txt'
	while IFS= read -r line
	do
		iptables -A INPUT -s "$line" -j DROP
	done < "$ipsToBlock"

# This portion will remove blocks on ips or ranges, hopefully ;)
elif [ $choice == '4' ]; then
	echo "Enter the IP or Range: "
	read Unblock
	echo "Your choice was to remove blocks placed on this" $Unblock
	iptables -D INPUT -s $Unblock -j DROP

# This portion will flush the iptables and wipe it clean
elif [ $choice == '5' ]; then
	echo "Your choice was to remove all blocks, aka flush the table"
	iptables -P INPUT ACCEPT
	iptables -P OUTPUT ACCEPT
	iptables -F
fi

# Clean up
# Removing files if they exist

rm -f new_ip_file.txt
